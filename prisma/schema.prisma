generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CALL {
  seq        Int          @id @default(autoincrement())
  createdAt  DateTime?    @db.DateTime(0)
  expiredAt  DateTime?    @db.DateTime(0)
  status     CALL_status?
  calltext   String?      @db.VarChar(300)
  price      Int
  RESTAURANT RESTAURANT   @relation(fields: [seq], references: [seq])
  LOCATION   LOCATION     @relation(fields: [seq], references: [seq])
  USER       USER         @relation(fields: [seq], references: [seq])
  CART       CART?
  ORDER      ORDER?
}

model CART {
  seq           Int           @id @default(autoincrement())
  request       String?       @db.VarChar(300)
  CALL          CALL          @relation(fields: [seq], references: [seq])
  SELECTED_MENU SELECTED_MENU @relation(fields: [seq], references: [seq])
  USER          USER          @relation(fields: [seq], references: [seq])
}

model CHAT {
  seq                       Int       @id @default(autoincrement())
  createdAt                 DateTime  @db.DateTime(0)
  updatedAt                 DateTime? @db.DateTime(0)
  USER                      USER      @relation(fields: [seq], references: [seq])
  MESSAGE_CHAT_seqToMESSAGE MESSAGE   @relation("CHAT_seqToMESSAGE", fields: [seq], references: [seq])
  MESSAGE_CHATToMESSAGE_seq MESSAGE?  @relation("CHATToMESSAGE_seq")
}

model LOCATION {
  seq        Int         @id @default(autoincrement())
  latitude   Float
  longitude  Float
  address    String      @db.VarChar(300)
  CALL       CALL?
  RESTAURANT RESTAURANT?
}

model MENU {
  seq           Int            @id @default(autoincrement())
  name          String         @db.VarChar(100)
  thumbnail     String?        @db.VarChar(300)
  description   String?        @db.VarChar(300)
  price         Int
  isAvailable   Boolean        @default(true)
  bestmenu      Boolean        @default(false)
  RESTAURANT    RESTAURANT     @relation(fields: [seq], references: [seq])
  OPTION        OPTION?
  SELECTED_MENU SELECTED_MENU?
}

model MESSAGE {
  seq                    Int       @id @default(autoincrement())
  text                   String    @db.VarChar(500)
  isRead                 Boolean   @default(false)
  createdAt              DateTime  @db.DateTime(0)
  updatedAt              DateTime? @db.DateTime(0)
  USER                   USER      @relation(fields: [seq], references: [seq])
  CHAT_CHATToMESSAGE_seq CHAT      @relation("CHATToMESSAGE_seq", fields: [seq], references: [seq])
  CHAT_CHAT_seqToMESSAGE CHAT?     @relation("CHAT_seqToMESSAGE")
}

model OPTION {
  seq         Int          @id @default(autoincrement())
  category    String       @db.VarChar(200)
  isRequired  Boolean
  isMultiple  Boolean
  MENU        MENU         @relation(fields: [seq], references: [seq])
  OPTION_ITEM OPTION_ITEM?
}

model OPTION_ITEM {
  seq           Int            @id @default(autoincrement())
  content       String         @db.VarChar(200)
  price         Int
  OPTION        OPTION         @relation(fields: [seq], references: [seq])
  SELECTED_MENU SELECTED_MENU?
}

model ORDER {
  seq                                Int           @id @default(autoincrement())
  createdAt                          DateTime      @db.DateTime(0)
  updatedAt                          DateTime      @db.DateTime(0)
  deliveryTime                       DateTime      @db.DateTime(0)
  status                             ORDER_status?
  RES_REVIEW                         RES_REVIEW    @relation(fields: [seq], references: [seq])
  USER_REVIEW_ORDER_seqToUSER_REVIEW USER_REVIEW   @relation("ORDER_seqToUSER_REVIEW", fields: [seq], references: [seq])
  CALL                               CALL          @relation(fields: [seq], references: [seq])
  USER                               USER          @relation(fields: [seq], references: [seq])
  USER_REVIEW_ORDERToUSER_REVIEW_seq USER_REVIEW?  @relation("ORDERToUSER_REVIEW_seq")
}

model REPLY {
  seq        Int         @id @default(autoincrement())
  content    String      @db.VarChar(500)
  createdAt  DateTime    @db.DateTime(0)
  updatedAt  DateTime?   @db.DateTime(0)
  RESTAURANT RESTAURANT  @relation(fields: [seq], references: [seq])
  RES_REVIEW RES_REVIEW?
}

model REPORT {
  seq       Int       @id @default(autoincrement())
  reason    String    @db.VarChar(300)
  isSolved  Boolean   @default(false)
  createdAt DateTime  @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  USER      USER      @relation(fields: [seq], references: [seq])
}

model RES_REVIEW {
  seq        Int        @id @default(autoincrement())
  createdAt  DateTime   @db.DateTime(0)
  updatedAt  DateTime?  @db.DateTime(0)
  rate       Float      @default(5) @db.Float
  content    String     @db.VarChar(500)
  image      String?    @db.VarChar(500)
  RESTAURANT RESTAURANT @relation(fields: [seq], references: [seq])
  REPLY      REPLY      @relation(fields: [seq], references: [seq])
  USER       USER       @relation(fields: [seq], references: [seq])
  ORDER      ORDER?
}

model RESTAURANT {
  seq          Int         @id @default(autoincrement())
  id           String      @db.VarChar(100)
  password     String      @db.VarChar(100)
  createdAt    DateTime    @db.Date
  dayoff       String      @db.VarChar(100)
  isOpen       Boolean
  minOrder     Int
  deliveryTip  Int
  seperatable  Boolean
  introduction String?     @db.VarChar(200)
  thumbnail    String?     @db.VarChar(300)
  rate         Float       @default(0) @db.Float
  category     String      @db.VarChar(100)
  LOCATION     LOCATION    @relation(fields: [seq], references: [seq])
  RUN_TIME     RUN_TIME    @relation(fields: [seq], references: [seq])
  CALL         CALL?
  MENU         MENU?
  REPLY        REPLY?
  RES_REVIEW   RES_REVIEW?
  NAME         String      @db.VarChar(100)
}

model RUN_TIME {
  seq        Int         @id @default(autoincrement())
  day        String      @db.VarChar(300)
  open       DateTime    @db.Time(0)
  close      DateTime    @db.Time(0)
  RESTAURANT RESTAURANT?
}

model SELECTED_MENU {
  seq         Int         @id @default(autoincrement())
  count       Int         @default(1)
  OPTION_ITEM OPTION_ITEM @relation(fields: [seq], references: [seq])
  MENU        MENU        @relation(fields: [seq], references: [seq])
  CART        CART?
}

model USER {
  seq         Int          @id @default(autoincrement())
  ID          String       @db.VarChar(100)
  password    String       @db.VarChar(100)
  name        String       @db.VarChar(100)
  createdAt   DateTime?    @db.Date
  updatedAt   DateTime?    @db.Date
  thumbnail   String?      @db.VarChar(500)
  token       String       @db.VarChar(100)
  status      USER_status
  CALL        CALL?
  CART        CART?
  CHAT        CHAT?
  MESSAGE     MESSAGE?
  ORDER       ORDER?
  REPORT      REPORT?
  RES_REVIEW  RES_REVIEW?
  USER_REVIEW USER_REVIEW?
}

model USER_REVIEW {
  seq                          Int       @id @default(autoincrement())
  createdAt                    DateTime  @db.DateTime(0)
  updatedAt                    DateTime? @db.DateTime(0)
  rate                         Int       @default(5)
  content                      String?   @db.VarChar(500)
  ORDER_ORDERToUSER_REVIEW_seq ORDER     @relation("ORDERToUSER_REVIEW_seq", fields: [seq], references: [seq])
  USER                         USER      @relation(fields: [seq], references: [seq])
  ORDER_ORDER_seqToUSER_REVIEW ORDER?    @relation("ORDER_seqToUSER_REVIEW")
}

enum CALL_status {
  isActivated
  isMatched
  isExpired
  isCompleted
}

enum ORDER_status {
  Recieved
  inDelivery
  canceled
  completed
}

enum USER_status {
  Active
  Stop
  Withdraw
}
